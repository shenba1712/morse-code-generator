{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/TextMorseCode/text-to-morsecode.component.ts","./src/app/components/TextMorseCode/text-to-morsecode.component.html","./src/app/components/morse-code-text/morse-code-text.component.ts","./src/app/components/morse-code-text/morse-code-text.component.html","./src/app/components/reference/reference.component.ts","./src/app/components/reference/reference.component.html","./src/app/domain/alphabets.enum.ts","./src/app/domain/characters.enum.ts","./src/app/domain/numbers.enum.ts","./src/app/domain/special-char.enum.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACyC;AACF;;;AAG9F,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,8GAAwB,EAAC;IACjE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4GAAsB,EAAC;IAC/D,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM,EAAC;IAChE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM,EAAC;CACnE,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACyB;;;;;AAO5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,sBAAsB,CAAC;QAC/B,UAAK,GAAG,kFAAgB,CAAC;KAC1B;;wEAHY,YAAY;4FAAZ,YAAY;QCRzB,iFACE;QAAA,0EACE;QAAA,uEACE;QAAA,wEAAkC;QAAC,iFACrC;QAAA,4DAAI;QAAA,4DAAO;QACb,qEAAgC;QAChC,yEACE;QAAA,uEACE;QAAA,iEACF;QAAA,4DAAI;QAEJ,yEACE;QAAA,wEAAyD;QAAA,8EAAkB;QAAA,4DAAI;QAC/E,wEAAyD;QAAA,8EAAkB;QAAA,4DAAI;QACjF,4DAAM;QACR,4DAAM;QACR,4DAAc;QACd,2EACE;QAAA,4EAA+B;QACjC,4DAAM;;QAhBS,0DAAc;QAAd,2EAAc;;6FDKhB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgC;AACmB;AACvC;AACK;AACX;AACV;AACY;AACE;AACqB;AACvB;AACQ;AACV;AAC2C;AAC3B;;AA2B9D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAfF;YACL,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,0EAAgB;YAChB,+EAAkB;YAClB,oEAAa;YACb,uEAAc;YACd,yEAAe;YACf,0DAAW;YACX,uEAAc;YACd,+EAAkB;YAClB,qEAAa;YACb,mFAAiB;SACpB;mIAIQ,SAAS,mBAvBlB,2DAAY;QACZ,8GAAwB;QACxB,6FAAkB;QAClB,6GAAsB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,0EAAgB;QAChB,+EAAkB;QAClB,oEAAa;QACb,uEAAc;QACd,yEAAe;QACf,0DAAW;QACX,uEAAc;QACd,+EAAkB;QAClB,qEAAa;QACb,mFAAiB;6FAKZ,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,8GAAwB;oBACxB,6FAAkB;oBAClB,6GAAsB;iBACvB;gBACC,OAAO,EAAE;oBACL,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,0EAAgB;oBAChB,+EAAkB;oBAClB,oEAAa;oBACb,uEAAc;oBACd,yEAAe;oBACf,0DAAW;oBACX,uEAAc;oBACd,+EAAkB;oBAClB,qEAAa;oBACb,mFAAiB;iBACpB;gBACH,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACM;AACJ;AACM;AACG;AAC4D;;;;;;;;;;ICsB7G,yEACE;IAAA,6EACE;IADmC,kVAAyB;IAC5D,yEAA4E;IAC9E,4DAAS;IACT,6EACE;IADmC,qVAA4B;IAC/D,yEAA6E;IAC/E,4DAAS;IACT,6EACE;IAD8B,8UAAqB;IACnD,yEAA4E;IAC9E,4DAAS;IACX,4DAAM;;;IARiB,0DAAa;IAAb,6EAAa;IAGb,0DAAc;IAAd,8EAAc;IAGd,0DAAa;IAAb,6EAAa;;;;;IAnB1C,wEACE;IAAA,0EAEE;IAAA,yEAAkF;IACpF,4DAAM;IACN,0EACE;IAAA,0EACE;IAAA,wEAAwB;IAAA,qEAAU;IAAA,4DAAK;IACvC,yEACE;IAAA,6EAA4B;IAAA,uEAAK;IAAA,wDAAa;IAAA,4DAAM;IAAA,4DAAK;IAC3D,4DAAM;IACN,uIACE;IAUJ,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAvBS,0DAC4B;IAD5B,uOAC4B;IACvC,0DAAoD;IAApD,kIAAoD;IAMxB,0DAAa;IAAb,iFAAa;IAEzB,0DAAmB;IAAnB,oFAAmB;;;ADd7C,MAAM,wBAAwB;IAmBnC;QAbA,QAAQ;QACR,mBAAc,GAAG,8EAAY,CAAC;QAC9B,kBAAa,GAAG,6EAAW,CAAC;QAC5B,SAAI,GAAG,8EAAY,CAAC;QACpB,UAAK,GAAG,+EAAa,CAAC;QACtB,SAAI,GAAG,8EAAY,CAAC;QAKpB,SAAI,GAAQ,EAAE,CAAC;IAGC,CAAC;IAEjB,QAAQ;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,CAAC,UAAU,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACpD,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAsB,CAAC;gBACjD,OAAO;oBACL,GAAG,EAAE,UAAU,CAAC,GAAG;oBACnB,KAAK,EAAE,UAAU,CAAC,KAAK;iBACxB,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;IACH,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAClD,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;QAC5B,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC7B,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC;aAC1B;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBAChC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,4DAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,kEAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,4DAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aACtD;iBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,SAAS,IAAI,gEAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;aACzC;iBAAM,IAAI,IAAI,KAAK,GAAG,EAAE;gBACvB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;aACxB;iBAAM;gBACL,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,qEAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,kEAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACvE,IAAI,qEAAW,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;oBAClC,IAAI,CAAC,SAAS,IAAI,qEAAW,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;iBAC1C;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YAClC,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEO,QAAQ,CAAC,CAAC;QAChB,OAAO,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;YACnC,8CAA8C;YAC9C,qFAAqF;YACrF,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,WAAW,EAAE;YAClD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,2BAA2B;YACvD,OAAO;SACR;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,SAAS,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aAC7B;SACF;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBAClC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAChC,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAEO,kBAAkB,CAAC,IAAS,EAAE,KAAa;QACjD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;iBAAM,IAAI,IAAI,KAAK,SAAS,EAAE;gBAC7B,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;SACF;IACH,CAAC;IAEO,WAAW,CAAC,IAAS,EAAE,IAAY;QACzC,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,QAAQ,CAAC,EAAE;gBACT,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACzC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;oBACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACzC,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACzC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACzC,MAAM;aACT;YACD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;SAClB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,OAAO,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;IACzD,CAAC;;gGAvJU,wBAAwB;wGAAxB,wBAAwB;QCbrC,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAwB;QAAA,0EAAe;QAAA,4DAAK;QAC5C,yEACE;QAAA,oFACE;QAAA,8EAAsG;QAA1E,mMAAwB;QAAuC,4DAAW;QACxG,4DAAiB;QACjB,yEACE;QAAA,6EAAgE;QAA9B,iJAAS,uBAAmB,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAClF,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0IACE;QAwBJ,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,gFAAmD;QACrD,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAjDG,0DAA2E;QAA3E,2KAA2E;QAK5C,0DAAwB;QAAxB,mFAAwB;QAQ9C,0DAA6B;QAA7B,2HAA6B;QA+BtB,0DAAmB;QAAnB,gFAAmB;;6FDlC/B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;AACM;AACF;AACK;AACiB;;;;;;;;;;;ICgBxE,wEACE;IAAA,0EAEE;IAAA,yEAAkF;IACpF,4DAAM;IACN,0EACE;IAAA,0EACE;IAAA,wEAAwB;IAAA,+DAAI;IAAA,4DAAK;IACjC,yEACE;IAAA,yEAAsB;IAAA,sEAAK;IAAA,wDAAQ;IAAA,4DAAM;IAAA,4DAAK;IAChD,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAZS,0DAC4B;IAD5B,uOAC4B;IACvC,0DAAoD;IAApD,kIAAoD;IAM9B,0DAAQ;IAAR,4EAAQ;;;ADjBxC,MAAM,sBAAsB;IAajC;QATA,mBAAc,GAAG,8EAAY,CAAC;QAC9B,kBAAa,GAAG,6EAAW,CAAC;QAI5B,iBAAY,GAAG,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,CAAC;QACtC,eAAU,GAAG,MAAM,CAAC,IAAI,CAAC,4DAAO,CAAC,CAAC;QAClC,oBAAe,GAAG,MAAM,CAAC,IAAI,CAAC,qEAAW,CAAC,CAAC;IAE3B,CAAC;IAEjB,QAAQ;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,CAAC,UAAU,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACpD,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAsB,CAAC;gBACjD,OAAO;oBACL,GAAG,EAAE,UAAU,CAAC,GAAG;oBACnB,KAAK,EAAE,UAAU,CAAC,KAAK;iBACxB,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;IACH,CAAC;IAED,YAAY;QACR,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxC,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChB,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;aAClB;iBAAM;gBACL,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,gEAAS,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC;gBAClE,IAAI,CAAC,CAAC,IAAI,EAAE;oBACV,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;iBACnB;qBAAM;oBACL,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,4DAAO,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC;oBAC1D,IAAI,CAAC,CAAC,IAAI,EAAE;wBACV,IAAI,CAAC,IAAI,IAAI,kEAAU,CAAC,IAAI,CAAC,CAAC;qBAC/B;yBAAM;wBACL,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,qEAAW,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC;wBACnE,IAAI,CAAC,CAAC,IAAI,EAAE;4BACV,IAAI,CAAC,IAAI,IAAI,kEAAU,CAAC,IAAI,CAAC,CAAC;yBAC/B;qBACF;iBACF;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE;YACnC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACL,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEO,QAAQ,CAAC,CAAC;QAChB,OAAO,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,OAAO,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;IACzD,CAAC;;4FA9EU,sBAAsB;sGAAtB,sBAAsB;QCbnC,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAwB;QAAA,qEAAU;QAAA,4DAAK;QACvC,wEACE;QAAA,kKACA;QAAA,gEACA;QAAA,yGACF;QAAA,4DAAK;QACL,0EACE;QAAA,qFACE;QAAA,+EAA4I;QAAzE,iMAAuB;QAAuC,4DAAW;QAC9I,4DAAiB;QACjB,0EACE;QAAA,8EAA2D;QAAzB,+IAAS,kBAAc,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC7E,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,wIACE;QAaJ,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,gFAAmD;QACrD,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA3CG,0DAAiE;QAAjE,4JAAiE;QAUK,2DAAuB;QAAvB,kFAAuB;QAAhF,uIAA+C;QAQnD,0DAAwB;QAAxB,iHAAwB;QAoBjB,0DAAmB;QAAnB,gFAAmB;;6FD5B/B,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACJ;AACS;AACH;AAEoC;;;;;;;ICAlF,0EACE;IAAA,0EACE;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAClB,4DAAM;IACN,0EACE;IAAA,yEAA8B;IAAA,uDAAkC;IAAA,4DAAK;IACvE,4DAAM;IACR,4DAAM;;;;IALE,0DAAO;IAAP,uEAAO;IAGmB,0DAAkC;IAAlC,gHAAkC;;;IAepE,0EACE;IAAA,0EACE;IAAA,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IAC3B,4DAAM;IACN,0EACE;IAAA,yEAA8B;IAAA,uDAAgC;IAAA,4DAAK;IACrE,4DAAM;IACR,4DAAM;;;;IALE,0DAAgB;IAAhB,uFAAgB;IAGU,0DAAgC;IAAhC,8GAAgC;;;IASpE,0EACE;IAAA,0EACE;IAAA,qEAAI;IAAA,uDAAoC;IAAA,4DAAK;IAC/C,4DAAM;IACN,0EACE;IAAA,yEAA8B;IAAA,uDAAiC;IAAA,4DAAK;IACtE,4DAAM;IACR,4DAAM;;;;IALE,0DAAoC;IAApC,gIAAoC;IAGV,0DAAiC;IAAjC,+GAAiC;;;;IAejE,0EACE;IAAA,0EACE;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACtB,4DAAM;IACN,0EACE;IAAA,yEAA8B;IAAA,uDAAa;IAAA,4DAAK;IAClD,4DAAM;IACN,0EACE;IAAA,wEACE;IAAA,6EACE;IADuB,iZAAqC;IAC5D,0EAAkE;IACpE,4DAAS;IACT,8EACE;IADuB,yWAA6B;IACpD,0EAAmE;IACrE,4DAAS;IACT,8EACE;IADkB,kWAAsB;IACxC,0EAAkE;IACpE,4DAAS;IACX,qEAAe;IACjB,4DAAM;IACR,4DAAM;;;;IAlBE,0DAAW;IAAX,2EAAW;IAGe,0DAAa;IAAb,6EAAa;IAK9B,0DAAa;IAAb,6EAAa;IAGb,0DAAc;IAAd,8EAAc;IAGd,0DAAa;IAAb,6EAAa;;;IAnBpC,8EACE;IAAA,yEACE;IAAA,yEACE;IAAA,0HACE;IAoBJ,4DAAM;IACR,4DAAM;IACR,4DAAU;;;IAvByB,0DAA0C;IAA1C,mFAA0C;;;;AD/C1E,MAAM,kBAAkB;IAwB7B;QArBA,iBAAY,GAAG,gEAAS,CAAC;QAIzB,eAAU,GAAG,4DAAO,CAAC;QAGrB,gBAAW,GAAG,qEAAW,CAAC;QAG1B,QAAQ;QACR,SAAI,GAAG,8EAAY,CAAC;QACpB,UAAK,GAAG,+EAAa,CAAC;QACtB,SAAI,GAAG,8EAAY,CAAC;QAEZ,kBAAa,GAAmB,EAAE,CAAC;QAC3C,eAAU,GAAG,EAAE,CAAC;QAChB,SAAI,GAAG,EAAE,CAAC;QACV,SAAI,GAAQ,EAAE,CAAC;QAIb,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,4DAAO,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,qEAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,qEAAW,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,GAAW;QACjB,IAAI,CAAC,CAAC,kEAAU,CAAC,GAAG,CAAC,EAAE;YACrB,OAAM,CAAC,kEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;QACpD,IAAI,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YACvC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;SACrC;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;QACpD,IAAI,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACtC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;SACpC;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,KAAK;QACxB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;YAC3C,8CAA8C;YAC9C,qFAAqF;YACrF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,WAAW,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,2BAA2B;YAC/D,OAAO;SACR;QACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,SAAS,EAAE;gBACjD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;aACrC;SACF;IACH,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;gBAChD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;gBACxC,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAEO,aAAa,CAAC,KAAK;QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAEO,kBAAkB,CAAC,KAAa,EAAE,IAAS,EAAE,KAAa;QAChE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;iBAAM,IAAI,IAAI,KAAK,SAAS,EAAE;gBAC7B,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3C,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;SACF;IACH,CAAC;IAEO,WAAW,CAAC,KAAK,EAAE,IAAS,EAAE,IAAY;QAChD,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,QAAQ,CAAC,EAAE;gBACT,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;oBACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChD,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChD,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChD,MAAM;aACT;YACD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;SAClB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;oFAvIU,kBAAkB;kGAAlB,kBAAkB;QCb/B,yEACE;QAAA,wEAA6B;QAAA,+EAAoB;QAAA,4DAAK;QACtD,mFACE;QAAA,6EACE;QAAA,yEACE;QAAA,yEACE;QAAA,8GACE;QAOF,mFAKgB;QAFD,qJAAQ,6BAAyB,IAAC;QAEjD,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACR,4DAAU;QACV,6EACE;QAAA,0EACE;QAAA,0EACE;QAAA,gHACE;QAOJ,4DAAM;QACR,4DAAM;QACR,4DAAU;QACV,8EACE;QAAA,0EACA;QAAA,0EACE;QAAA,gHACE;QAOF,oFAKgB;QAFD,sJAAQ,4BAAwB,IAAC;QAEhD,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACN,4DAAU;QACV,yHACE;QA0BJ,4DAAgB;QAClB,4DAAM;;QA/EiC,0DAAqC;QAArC,0FAAqC;QAQnD,0DAA+B;QAA/B,6HAA+B;QAYjB,0DAA8B;QAA9B,mFAA8B;QAchC,0DAAoC;QAApC,yFAAoC;QAQlD,0DAA8B;QAA9B,2HAA8B;QASxB,0DAA2B;QAA3B,uHAA2B;;6FD5C3C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAEE,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAA,IAAY,SAkCX;AAlCD,WAAY,SAAS;IACnB,qBAAQ;IACR,uBAAU;IACV,uBAAU;IACV,sBAAS;IACT,oBAAO;IACP,uBAAU;IACV,sBAAS;IACT,uBAAU;IACV,qBAAQ;IACR,uBAAU;IACV,sBAAS;IACT,uBAAU;IACV,qBAAQ;IACR,qBAAQ;IACR,sBAAS;IACT,uBAAU;IACV,uBAAU;IACV,sBAAS;IACT,sBAAS;IACT,oBAAO;IACP,sBAAS;IACT,uBAAU;IACV,sBAAS;IACT,uBAAU;IACV,uBAAU;IACV,uBAAU;IACV,4BAAU;IACV,4BAAU;IACV,4BAAU;IACV,wBAAW;IACX,6BAAW;IACX,6BAAW;AAEb,CAAC,EAlCW,SAAS,KAAT,SAAS,QAkCpB;;;;;;;;;;;;;AClCD;AAAA;AAAA,IAAY,UA0BX;AA1BD,WAAY,UAAU;IACpB,uBAAS;IACT,yBAAW;IACX,4BAAc;IACd,6BAAe;IACf,8BAAiB;IACjB,yBAAW;IACX,sBAAQ;IACR,yBAAW;IACX,+BAAiB;IACjB,wBAAU;IACV,yBAAW;IACX,gCAAkB;IAClB,iCAAmB;IACnB,yBAAW;IACX,iCAAmB;IACnB,wBAAU;IACV,uBAAS;IACT,uBAAS;IACT,yBAAW;IACX,wBAAU;IACV,wBAAU;IACV,uBAAS;IACT,yBAAW;IACX,yBAAW;IACX,wBAAU;AACZ,CAAC,EA1BW,UAAU,KAAV,UAAU,QA0BrB;;;;;;;;;;;;;AC1BD;AAAA;AAAA,IAAY,OAWX;AAXD,WAAY,OAAO;IACjB,yBAAc;IACd,wBAAa;IACb,wBAAa;IACb,0BAAe;IACf,yBAAc;IACd,yBAAc;IACd,wBAAa;IACb,0BAAe;IACf,0BAAe;IACf,yBAAc;AAChB,CAAC,EAXW,OAAO,KAAP,OAAO,QAWlB;;;;;;;;;;;;;ACXD;AAAA;AAAA,IAAY,WAgBX;AAhBD,WAAY,WAAW;IACrB,6BAAc;IACd,+BAAgB;IAChB,kCAAmB;IACnB,kCAAmB;IACnB,oCAAqB;IACrB,8BAAe;IACf,4BAAa;IACb,8BAAe;IACf,qCAAsB;IACtB,6BAAc;IACd,+BAAgB;IAChB,qCAAsB;IACtB,uCAAwB;IACxB,+BAAgB;IAChB,sCAAuB;AACzB,CAAC,EAhBW,WAAW,KAAX,WAAW,QAgBtB;;;;;;;;;;;;;AChBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {TextToMorsecodeComponent} from './components/TextMorseCode/text-to-morsecode.component';\nimport {MorseCodeTextComponent} from './components/morse-code-text/morse-code-text.component';\n\n\nconst routes: Routes = [\n  { path: 'text-to-morsecode', component: TextToMorsecodeComponent},\n  { path: 'morsecode-to-text', component: MorseCodeTextComponent},\n  { path: '', redirectTo: '/text-to-morsecode', pathMatch: 'full'},\n  { path: '**', redirectTo: '/text-to-morsecode', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {faBroadcastTower} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'morse-code-generator';\n  tower = faBroadcastTower;\n}\n","<mat-toolbar class=\"bg-purple\">\n  <span style=\"cursor: pointer\">\n    <a routerLink=\"\">\n      <fa-icon [icon]=\"tower\"></fa-icon> Morse Code Generator\n    </a></span>\n  <span class=\"fill-space\"></span>\n  <div class=\"dropdown dropleft\">\n    <a class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      Menu\n    </a>\n\n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n      <a class=\"dropdown-item\" routerLink=\"/text-to-morsecode\">Text to Morse Code</a>\n      <a class=\"dropdown-item\" routerLink=\"/morsecode-to-text\">Morse Code to Text</a>\n    </div>\n  </div>\n</mat-toolbar>\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TextToMorsecodeComponent } from './components/TextMorseCode/text-to-morsecode.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ReferenceComponent} from './components/reference/reference.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MorseCodeTextComponent } from './components/morse-code-text/morse-code-text.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextToMorsecodeComponent,\n    ReferenceComponent,\n    MorseCodeTextComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatButtonModule,\n        FormsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatTabsModule,\n        FontAwesomeModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {Alphabets} from '../../domain/alphabets.enum';\nimport {Numbers} from '../../domain/numbers.enum';\nimport {Characters} from '../../domain/characters.enum';\nimport {SpecialChar} from '../../domain/special-char.enum';\nimport {faArrowDown, faArrowRight, faPauseCircle, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons';\nimport {ConversionHistory} from '../../domain/history';\n\n@Component({\n  selector: 'app-text-morse-code',\n  templateUrl: './text-to-morsecode.component.html',\n  styleUrls: ['./text-to-morsecode.component.scss']\n})\nexport class TextToMorsecodeComponent implements OnInit {\n\n  searchText: string;\n  morsecode: string;\n  storage: ConversionHistory[];\n\n  // icons\n  arrowRightIcon = faArrowRight;\n  arrowDownIcon = faArrowDown;\n  play = faPlayCircle;\n  pause = faPauseCircle;\n  stop = faStopCircle;\n\n  private audioContext: AudioContext;\n  oscillator: any;\n  gain: any;\n  rate: any = 20;\n  dot: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    const jsonObject = JSON.parse(localStorage.getItem('text-to-morseCode'));\n    if (!!jsonObject) {\n      this.storage = Object.entries(jsonObject).map(entry => {\n        const entryValue = entry[1] as ConversionHistory;\n        return {\n          key: entryValue.key,\n          value: entryValue.value\n        };\n      });\n    }\n\n    if (!this.storage) {\n      this.storage = [];\n    }\n  }\n\n  generateMorseCode() {\n      this.morsecode = '';\n      const text = this.searchText.trim().toUpperCase();\n      const charArray = [...text];\n      charArray.forEach(char => {\n        if (char.charCodeAt(0) === 10) {\n          this.morsecode += '\\n\\n';\n        } else if (char.match('^[0-9]$')) {\n          const key = Object.keys(Numbers).find(n => Characters[n] === char);\n          this.morsecode = this.morsecode + Numbers[key] + ' ';\n        } else if (this.isLetter(char)) {\n          this.morsecode += Alphabets[char] + ' ';\n        } else if (char === ' ') {\n          this.morsecode += '/ ';\n        } else {\n          const key = Object.keys(SpecialChar).find(n => Characters[n] === char);\n          if (SpecialChar[key] !== undefined) {\n            this.morsecode += SpecialChar[key] + ' ';\n          }\n        }\n      });\n      this.saveToStorage();\n  }\n\n  private saveToStorage() {\n    if (this.storage.length > 10) {\n      this.storage.splice(0, 1);\n    }\n    this.storage.push({\n      key: this.searchText.toUpperCase(),\n      value: this.morsecode\n    });\n    localStorage.setItem('text-to-morseCode', JSON.stringify(this.storage));\n  }\n\n  private isLetter(c) {\n    return c.toLowerCase() !== c.toUpperCase();\n  }\n\n  playMorseText() {\n    if (this.audioContext === undefined) {\n      // Chrome requires audio context after gesture\n      // https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n      this.createContext();\n    } else if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume(); // resume play when paused.\n      return;\n    }\n    this.generateMorseAudio(this.audioContext.currentTime, this.morsecode);\n  }\n\n  pauseResumeAudio() {\n    if (!!this.audioContext) {\n      if (this.audioContext.state === 'running') {\n        this.audioContext.suspend();\n      }\n    }\n  }\n\n  stopAudio() {\n    if (!!this.audioContext) {\n      if (this.audioContext.state !== 'closed') {\n        this.audioContext.close().then(() => {\n          this.audioContext = undefined;\n        });\n      }\n    }\n  }\n\n  private createContext() {\n    this.audioContext = new AudioContext();\n    this.oscillator = this.audioContext.createOscillator();\n    this.gain = this.audioContext.createGain();\n    this.gain.gain.value = 0;\n    this.oscillator.frequency.value = 750;\n    this.oscillator.connect(this.gain);\n    this.gain.connect(this.audioContext.destination);\n    this.dot = 1.2 / this.rate;\n    this.oscillator.start(0);\n  }\n\n  private generateMorseAudio(time: any, morse: string) {\n    for (const code of morse) {\n      if (code === ' ') {\n        time += 3 * this.dot;\n      } else if (code !== undefined) {\n        time = this.createSound(time, code);\n        time += 2 * this.dot;\n      }\n    }\n  }\n\n  private createSound(time: any, char: string) {\n    for (const c of char) {\n      switch (c) {\n        case '.':\n          this.gain.gain.setValueAtTime(1.0, time);\n          time += this.dot;\n          this.gain.gain.setValueAtTime(0.0, time);\n          break;\n        case '-':\n          this.gain.gain.setValueAtTime(1.0, time);\n          time += 3 * this.dot;\n          this.gain.gain.setValueAtTime(0.0, time);\n          break;\n      }\n      time += this.dot;\n    }\n    return time;\n  }\n\n  isMobile() {\n    return window.matchMedia('(max-width: 487px)').matches;\n  }\n\n}\n\n","<div class=\"container-fluid mt-3\">\n\n  <div class=\"row\">\n    <div [ngClass]=\"!morsecode || morsecode?.length < 0 ? 'col-sm-12' : 'col-sm-5' \">\n      <div class=\"card mb-4\">\n        <h3 class=\"card-header\">Text In English</h3>\n        <div class=\"card-body\">\n          <mat-form-field class=\"mb-4\" appearance=\"outline\">\n            <textarea rows=\"7\" matInput [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n          </mat-form-field>\n          <div class=\"float-right\">\n            <button type=\"button\" class=\"btn\" (click)=\"generateMorseCode()\">Convert</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"morsecode?.length > 0\">\n      <div class=\"col-sm-1\" [ngStyle]=\"!isMobile() ? {'display': 'flex', 'align-items': 'center'} :\n       {'display': 'flex', 'justify-content': 'center'}\">\n        <fa-icon [icon]=\"isMobile() ? arrowDownIcon : arrowRightIcon\" size=\"4x\"></fa-icon>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"card\">\n          <h3 class=\"card-header\">Morse Code</h3>\n          <div class=\"card-body\">\n            <h2 #code class=\"card-text\"><pre>{{morsecode}}</pre></h2>\n          </div>\n          <div class=\"card-body\" *ngIf=\"!!morsecode\">\n            <button class=\"float-right ml-1 btn\" (click)=\"playMorseText()\">\n              <fa-icon size=\"2x\" [icon]=\"play\" style=\"color: black !important;\"></fa-icon>\n            </button>\n            <button class=\"float-right ml-1 btn\" (click)=\"pauseResumeAudio()\">\n              <fa-icon size=\"2x\" [icon]=\"pause\" style=\"color: black !important;\"></fa-icon>\n            </button>\n            <button class=\"float-right btn\" (click)=\"stopAudio()\">\n              <fa-icon size=\"2x\" [icon]=\"stop\" style=\"color: black !important;\"></fa-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"row mt-5\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-reference [history]=\"storage\"></app-reference>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Numbers} from '../../domain/numbers.enum';\nimport {Characters} from '../../domain/characters.enum';\nimport {Alphabets} from '../../domain/alphabets.enum';\nimport {SpecialChar} from '../../domain/special-char.enum';\nimport {faArrowDown, faArrowRight} from '@fortawesome/free-solid-svg-icons';\nimport {ConversionHistory} from '../../domain/history';\n\n@Component({\n  selector: 'app-morse-code-text',\n  templateUrl: './morse-code-text.component.html',\n  styleUrls: ['./morse-code-text.component.scss']\n})\nexport class MorseCodeTextComponent implements OnInit {\n\n  morseCode: string;\n  text: string;\n  arrowRightIcon = faArrowRight;\n  arrowDownIcon = faArrowDown;\n\n  storage: ConversionHistory[];\n\n  alphabetKeys = Object.keys(Alphabets);\n  numberKeys = Object.keys(Numbers);\n  specialCharKeys = Object.keys(SpecialChar);\n\n  constructor() { }\n\n  ngOnInit() {\n    const jsonObject = JSON.parse(localStorage.getItem('morsecode-to-text'));\n    if (!!jsonObject) {\n      this.storage = Object.entries(jsonObject).map(entry => {\n        const entryValue = entry[1] as ConversionHistory;\n        return {\n          key: entryValue.key,\n          value: entryValue.value\n        };\n      });\n    }\n\n    if (!this.storage) {\n      this.storage = [];\n    }\n  }\n\n  generateText() {\n      this.text = '';\n      const morsecode = this.morseCode.trim();\n      const codeArray = morsecode.split(' ');\n      codeArray.forEach(code => {\n        if (code === '/') {\n          this.text += ' ';\n        } else {\n          let char = this.alphabetKeys.find(key => Alphabets[key] === code);\n          if (!!char) {\n            this.text += char;\n          } else {\n            char = this.numberKeys.find(key => Numbers[key] === code);\n            if (!!char) {\n              this.text += Characters[char];\n            } else {\n              char = this.specialCharKeys.find(key => SpecialChar[key] === code);\n              if (!!char) {\n                this.text += Characters[char];\n              }\n            }\n          }\n        }\n      });\n      if (!!this.text && !!this.morseCode) {\n        this.saveToStorage();\n      }\n  }\n\n  private saveToStorage() {\n    if (this.storage.length > 10) {\n      this.storage.splice(0, 1);\n    }\n    this.storage.push({\n      key: this.text.toUpperCase(),\n      value: this.morseCode\n    });\n    localStorage.setItem('morsecode-to-text', JSON.stringify(this.storage));\n  }\n\n  private isLetter(c) {\n    return c.toLowerCase() !== c.toUpperCase();\n  }\n\n  isMobile() {\n    return window.matchMedia('(max-width: 487px)').matches;\n  }\n\n\n}\n","<div class=\"container-fluid mt-3\">\n\n  <div class=\"row\">\n    <div [ngClass]=\"!text || text?.length < 0 ? 'col-sm-12' : 'col-sm-6' \">\n      <div class=\"card mb-4\">\n        <h3 class=\"card-header\">Morse Code</h3>\n        <h4 class=\"card-subtitle pl-3\">\n          Separate every morse code char with space and separate words with ' / ' (/ with spaces on both sides)\n          <br>\n          Eg: Hello ! -> .... . .-.. .-.. --- / -.-.--\n        </h4>\n        <div class=\"card-body\">\n          <mat-form-field style=\"margin-bottom: 0 !important;\" class=\"mb-4\" appearance=\"outline\">\n            <textarea [attr.rows]=\"!text || text?.length < 0 ? 5 : 4\" matInput [(ngModel)]=\"morseCode\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n          </mat-form-field>\n          <div class=\"float-right\">\n            <button type=\"button\" class=\"btn\" (click)=\"generateText()\">Convert</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"text?.length > 0\">\n      <div class=\"col-sm-1\" [ngStyle]=\"!isMobile() ? {'display': 'flex', 'align-items': 'center'} :\n       {'display': 'flex', 'justify-content': 'center'}\">\n        <fa-icon [icon]=\"isMobile() ? arrowDownIcon : arrowRightIcon\" size=\"4x\"></fa-icon>\n      </div>\n      <div class=\"col-sm-5\">\n        <div class=\"card\">\n          <h3 class=\"card-header\">Text</h3>\n          <div class=\"card-body\">\n            <h2 class=\"card-text\"><pre>{{text}}</pre></h2>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"row mt-5\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-reference [history]=\"storage\"></app-reference>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Alphabets} from '../../domain/alphabets.enum';\nimport {Numbers} from '../../domain/numbers.enum';\nimport {SpecialChar} from '../../domain/special-char.enum';\nimport {Characters} from '../../domain/characters.enum';\nimport {ConversionHistory} from '../../domain/history';\nimport {faPauseCircle, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-reference',\n  templateUrl: './reference.component.html',\n  styleUrls: ['./reference.component.scss']\n})\nexport class ReferenceComponent {\n  @Input() history: ConversionHistory[];\n  alphabetKeys: string[];\n  alphabetCode = Alphabets;\n  alphabetPagedList: string[];\n\n  numberKeys: string[];\n  numberCode = Numbers;\n\n  splCharKeys: string[];\n  splCharCode = SpecialChar;\n  splCharPagedList: string[];\n\n  // icons\n  play = faPlayCircle;\n  pause = faPauseCircle;\n  stop = faStopCircle;\n\n  private audioContexts: AudioContext[] = [];\n  oscillator = [];\n  gain = [];\n  rate: any = 20;\n  dot: any;\n\n  constructor() {\n    this.alphabetKeys = Object.keys(Alphabets);\n    this.numberKeys = Object.keys(Numbers);\n    this.splCharKeys = Object.keys(SpecialChar);\n    this.alphabetPagedList = Object.keys(Alphabets).slice(0, 10);\n    this.splCharPagedList = Object.keys(SpecialChar).slice(0, 5);\n  }\n\n  convertCode(code: string): string {\n    return code.split('').join(' ');\n  }\n\n  format(key: string): string {\n    return key.replace('_', ' ');\n  }\n\n  showKey(key: string): string {\n    if (!!Characters[key]) {\n      return(Characters[key]);\n    }\n    return key;\n  }\n\n  pageAlphabetEvent(event) {\n    const startIndex = event.pageIndex * event.pageSize;\n    let endIndex = startIndex + event.pageSize;\n    if (endIndex > this.alphabetKeys.length) {\n      endIndex = this.alphabetKeys.length;\n    }\n    this.alphabetPagedList = this.alphabetKeys.slice(startIndex, endIndex);\n  }\n\n  pageSplCharEvent(event) {\n    const startIndex = event.pageIndex * event.pageSize;\n    let endIndex = startIndex + event.pageSize;\n    if (endIndex > this.splCharKeys.length) {\n      endIndex = this.splCharKeys.length;\n    }\n    this.splCharPagedList = this.splCharKeys.slice(startIndex, endIndex);\n  }\n\n  playMorseText(index, value) {\n    if (this.audioContexts[index] === undefined) {\n      // Chrome requires audio context after gesture\n      // https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n      this.createContext(index);\n    } else if (this.audioContexts[index].state === 'suspended') {\n      this.audioContexts[index].resume(); // resume play when paused.\n      return;\n    }\n    this.generateMorseAudio(index, this.audioContexts[index].currentTime, value);\n  }\n\n  pauseResumeAudio(index) {\n    if (!!this.audioContexts[index]) {\n      if (this.audioContexts[index].state === 'running') {\n        this.audioContexts[index].suspend();\n      }\n    }\n  }\n\n  stopAudio(index) {\n    if (!!this.audioContexts[index]) {\n      if (this.audioContexts[index].state !== 'closed') {\n        this.audioContexts[index].close().then(() => {\n          this.audioContexts[index] = undefined;\n        });\n      }\n    }\n  }\n\n  private createContext(index) {\n    this.audioContexts[index] = new AudioContext();\n    this.oscillator[index] = this.audioContexts[index].createOscillator();\n    this.gain[index] = this.audioContexts[index].createGain();\n    this.gain[index].gain.value = 0;\n    this.oscillator[index].frequency.value = 750;\n    this.oscillator[index].connect(this.gain[index]);\n    this.gain[index].connect(this.audioContexts[index].destination);\n    this.dot = 1.2 / this.rate;\n    this.oscillator[index].start(0);\n  }\n\n  private generateMorseAudio(index: number, time: any, morse: string) {\n    for (const code of morse) {\n      if (code === ' ') {\n        time += 3 * this.dot;\n      } else if (code !== undefined) {\n        time = this.createSound(index, time, code);\n        time += 2 * this.dot;\n      }\n    }\n  }\n\n  private createSound(index, time: any, char: string) {\n    for (const c of char) {\n      switch (c) {\n        case '.':\n          this.gain[index].gain.setValueAtTime(1.0, time);\n          time += this.dot;\n          this.gain[index].gain.setValueAtTime(0.0, time);\n          break;\n        case '-':\n          this.gain[index].gain.setValueAtTime(1.0, time);\n          time += 3 * this.dot;\n          this.gain[index].gain.setValueAtTime(0.0, time);\n          break;\n      }\n      time += this.dot;\n    }\n    return time;\n  }\n\n\n}\n","<div class=\"min-height container-fluid\">\n  <h1 class=\"text-center pb-3\">Morse Code Reference</h1>\n  <mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Alphabets\">\n      <div class=\"row pt-3\">\n        <div class=\"p-1 col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n          <div class=\"row text-center\" *ngFor=\"let key of alphabetPagedList\">\n            <div class=\"col-lg-6 col-md-6 col-sm-6\">\n              <h3>{{key}}</h3>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-12\">\n              <h1 style=\"font-weight: bold\">{{convertCode(alphabetCode[key])}}</h1>\n            </div>\n          </div>\n          <mat-paginator [length]=\"alphabetKeys?.length\"\n                         [pageSize]=\"10\"\n                         [pageSizeOptions]=\"[5, 10, 15]\"\n                         (page)=\"pageAlphabetEvent($event)\"\n                         [showFirstLastButtons]=\"true\">\n          </mat-paginator>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Numbers\">\n      <div class=\"row pt-3\">\n        <div class=\"p-1 col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n          <div class=\"row text-center\" *ngFor=\"let key of numberKeys\">\n            <div class=\"col-lg-6 col-md-6 col-sm-6\">\n              <h3>{{showKey(key)}}</h3>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-12\">\n              <h1 style=\"font-weight: bold\">{{convertCode(numberCode[key])}}</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Special Characters\">\n      <div class=\"row pt-3\">\n      <div class=\"p-1 col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n        <div class=\"row text-center\" *ngFor=\"let key of splCharPagedList\">\n          <div class=\"col-lg-6 col-md-6 col-sm-6\">\n            <h3>{{format(key)}} [ {{showKey(key)}} ]</h3>\n          </div>\n          <div class=\"col-lg-4 col-md-4 col-sm-12\">\n            <h1 style=\"font-weight: bold\">{{convertCode(splCharCode[key])}}</h1>\n          </div>\n        </div>\n        <mat-paginator [length]=\"splCharKeys?.length\"\n                       [pageSize]=\"5\"\n                       [pageSizeOptions]=\"[5, 10]\"\n                       (page)=\"pageSplCharEvent($event)\"\n                       [showFirstLastButtons]=\"true\">\n        </mat-paginator>\n      </div>\n    </div>\n    </mat-tab>\n    <mat-tab label=\"History\" *ngIf=\"history?.length > 0\">\n      <div class=\"row pt-3\">\n        <div class=\"p-1 col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n          <div class=\"row text-center\" *ngFor=\"let key of history; let i = index\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4\">\n              <h3>{{key.key}}</h3>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-4\">\n              <h1 style=\"font-weight: bold\">{{key.value}}</h1>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-4\">\n              <ng-container>\n                <button class=\"mr-1 btn\" (click)=\"playMorseText(i, key.value)\">\n                  <fa-icon [icon]=\"play\" style=\"color: black !important;\"></fa-icon>\n                </button>\n                <button class=\"mr-1 btn\" (click)=\"pauseResumeAudio(i)\">\n                  <fa-icon [icon]=\"pause\" style=\"color: black !important;\"></fa-icon>\n                </button>\n                <button class=\"btn\" (click)=\"stopAudio(i)\">\n                  <fa-icon [icon]=\"stop\" style=\"color: black !important;\"></fa-icon>\n                </button>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","export enum Alphabets {\n  A = '.-',\n  B = '-...',\n  C = '-.-.',\n  D = '-..',\n  E = '.',\n  F = '..-.',\n  G = '--.',\n  H = '....',\n  I = '..',\n  J = '.---',\n  K = '-.-',\n  L = '.-..',\n  M = '--',\n  N = '-.',\n  O = '---',\n  P = '.--.',\n  Q = '--.-',\n  R = '.-.',\n  S = '...',\n  T = '-',\n  U = '..-',\n  V = '...-',\n  W = '.--',\n  X = '-..-',\n  Y = '-.--',\n  Z = '--..',\n  Ä = '.-.-',\n  Ö = '---.',\n  Ü = '..--',\n  CH = '----',\n  é = '..-..',\n  ñ = '--.--',\n\n}\n","export enum Characters {\n  DOT = '.',\n  COMMA = ',',\n  QUESTION = '?',\n  AMPERSAND = '&',\n  APOSTROPHE = '\\'',\n  SLASH = '/',\n  AT = '@',\n  EQUAL = '=',\n  EXCLAMATION = '!',\n  PLUS = '+',\n  MINUS = '-',\n  OPEN_BRACKET = '(',\n  CLOSE_BRACKET = ')',\n  COLON = ':',\n  DOUBLE_QUOTE = '\\\"',\n  ZERO = '0',\n  ONE = '1',\n  TWO = '2',\n  THREE = '3',\n  FOUR = '4',\n  FIVE = '5',\n  SIX = '6',\n  SEVEN = '7',\n  EIGHT = '8',\n  NINE = '9'\n}\n","export enum Numbers {\n  ZERO = '-----',\n  ONE = '.----',\n  TWO = '..---',\n  THREE = '...--',\n  FOUR = '....-',\n  FIVE = '.....',\n  SIX = '-....',\n  SEVEN = '--...',\n  EIGHT = '---..',\n  NINE = '----.'\n}\n","export enum SpecialChar {\n  DOT = '.-.-.-',\n  COMMA = '--..--',\n  QUESTION = '..--..',\n  AMPERSAND = '.-...',\n  APOSTROPHE = '.----.',\n  SLASH = '-..-.',\n  AT = '.--.-.',\n  EQUAL = '-...-',\n  EXCLAMATION = '-.-.--',\n  PLUS = '.-.-.',\n  MINUS = '-....-',\n  OPEN_BRACKET = '-.--.',\n  CLOSE_BRACKET = '-.--.-',\n  COLON = '---...',\n  DOUBLE_QUOTE = '.-..-.'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}